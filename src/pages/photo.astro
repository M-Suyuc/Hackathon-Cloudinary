---
import { getCldImageUrl } from 'astro-cloudinary/helpers'
import Layout from '../layouts/Layout.astro'
import ListImages from '../components/ListImages.astro'

const { searchParams } = Astro.url
const id = searchParams.get('id')

if (id == null) return Astro.redirect('/')
const url = getCldImageUrl({ src: id })
---

<Layout title="Photos">
	<header class="absolute left-0 top-0 px-8 py-2 text-start text-3xl">
		<a href="/" class="font flex size-full items-center justify-center gap-2 text-white">
			Go Home
			<img src="./favicon.png" alt="" class="" />
		</a>
	</header>
	<main
		class="mx-auto mt-20 flex max-w-screen-lg flex-col items-center justify-center"
		data-id={id}
	>
		<div class="font flex w-full justify-center gap-28">
			<header class="flex w-[25%] flex-col gap-3 py-4 text-center text-2xl text-white">
				<h4 class="w-full px-2 text-4xl text-green-600">selecet your option</h4>
				<button class="w-full bg-purple-700 px-2 py-2" data-topic="ghost">Add Ghosts </button>
				<button class="w-full bg-purple-700 px-2 py-2" data-topic="zombies">Add Zombies</button>
				<button class="w-full bg-purple-700 px-2 py-2" data-topic="devil">Add Demons</button>
				<button class="w-full bg-purple-700 px-2 py-2" data-topic="cala"
					>Add a pumpkin background</button
				>
				<button class="w-full bg-purple-700 px-2 py-2" data-topic="makeup">Creepy Makeup</button>
			</header>

			<div class="flex flex-col items-center justify-center">
				<two-up>
					<img
						src={url}
						alt="img-original"
						id="original"
						class="img aspect-[12/8] h-[400px] rounded-xl object-contain"
					/>
					<img
						src={url}
						alt="img-preview"
						id="preview"
						class="img aspect-[12/8] h-[400px] rounded-xl object-contain"
					/>
				</two-up>

				<div class="font my-6 flex gap-4 text-3xl">
					<button
						id="dowload"
						class="font rounded-md border-b border-gray-500 bg-orange-600 px-4 py-1 font-sans text-4xl text-black transition-colors hover:text-white"
						>Download image</button
					>
					<a
						href="#"
						id="share"
						class="font rounded-md border-b border-gray-500 bg-orange-600 px-4 py-1 font-sans text-4xl text-black transition-colors hover:text-white"
						target="_blank"
						rel="nofollow"
						tabindex="0">Share</a
					>
				</div>
			</div>
		</div>
	</main>

	<ListImages />
</Layout>
<style>
	.img {
		transition: opacity 0.3s ease;
		border-top: 10px solid #e77700;
		border-bottom: 10px solid #9900ff;
		background-image: linear-gradient(#e77700, #9900ff), linear-gradient(#e77700, #9900ff);
		background-size: 10px 100%;
		background-position:
			0 0,
			100% 0;
		background-repeat: no-repeat;
	}
</style>
<script>
	import 'two-up-element'
	import { getCldImageUrl } from 'astro-cloudinary/helpers'

	const id = document.querySelector('main')?.getAttribute('data-id') ?? ''
	const preview = document.getElementById('preview') as HTMLImageElement
	const buttons = document.querySelectorAll('button')
	const downloadButton = document.getElementById('dowload')
	let btnShare = document.getElementById('share') as HTMLAnchorElement
	let generateUr = ''

	const TOPICS: Record<string, string> = {
		ghost: 'Add acary ghosts to the background',
		zombies: 'Add zombies close to you to the background',
		devil: 'Add some demons hugging you and ghosts around to the background',
		cala: 'Add background withspooky Halloween theme',
		makeup:
			'use same face but madeup in a Halloween skull and put on everyone spooky skull costume for Halloween',

		custom: ''
	} as const

	buttons.forEach((button) => {
		button.addEventListener('click', (_e) => {
			const topic = button.getAttribute('data-topic')
			if (topic == null) return

			const url = ChooseTopic(topic) ?? ''
			console.log(url)

			getSrcToShare(url)
			generateUr = url
			preview.style.opacity = '.3'
			preview.src = url
			preview.onload = () => {
				preview.style.opacity = '1'
			}
		})
	})

	downloadButton?.addEventListener('click', async (_e) => {
		const imgBlob = await fetch(generateUr)
			.then((response) => response.arrayBuffer())
			.then((buffer) => new Blob([buffer], { type: 'image/avif' }))
		const a = document.createElement('a')
		a.href = URL.createObjectURL(imgBlob)
		a.download = `imagen.avif`
		document.body.appendChild(a)
		a.click()
		document.body.removeChild(a)
	})

	function getSrcToShare(url: string) {
		const tweetMessage = encodeURIComponent('¡Mira esta increíble imagen generada!')
		const imageUrl = encodeURIComponent(url)

		const tweetUrl = `https://twitter.com/intent/tweet?text=${tweetMessage}&url=${imageUrl}`
		updateMetaTags(url)
		btnShare.href = tweetUrl
	}

	function updateMetaTags(imageUrl: string) {
		const twitterImageMeta = document.querySelector('meta[name="twitter:image"]')
		const twitterUrlMeta = document.querySelector('meta[name="twitter:url"]')

		twitterImageMeta?.setAttribute('content', imageUrl)
		twitterUrlMeta?.setAttribute('content', window.location.href)

		const ogImageMeta = document.querySelector('meta[property="og:image"]')
		const ogUrlMeta = document.querySelector('meta[property="og:url"]')

		ogImageMeta?.setAttribute('content', imageUrl)
		ogUrlMeta?.setAttribute('content', window.location.href)
	}

	function ChooseTopic(topic: string) {
		let newUrl = ''
		switch (topic) {
			case 'cala':
				const url = getCldImageUrl({
					src: id,
					replaceBackground: TOPICS[topic],
					improve: true
				})
				newUrl = url
				break
			case 'ghost':
				const url2 = getCldImageUrl({
					src: id,
					replaceBackground: TOPICS[topic],
					improve: true
				})
				newUrl = url2
				break
			case 'zombies':
				const url3 = getCldImageUrl({
					src: id,
					replaceBackground: TOPICS[topic],
					improve: true
				})
				newUrl = url3
				break
			case 'devil':
				const url4 = getCldImageUrl({
					src: id,
					replaceBackground: TOPICS[topic],
					improve: true
				})
				newUrl = url4
				break
			case 'makeup':
				const url5 = getCldImageUrl({
					src: id,
					replace: {
						from: 'face and shirt',
						to: TOPICS[topic],
						preserveGeometry: true
					},
					// replaceBackground: 'Add background withspooky Halloween theme',
					improve: true
				})
				newUrl = url5
				break

			default:
				break
		}

		return newUrl
	}
</script>
